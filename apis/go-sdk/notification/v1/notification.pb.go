// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: v1/notification.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AppInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// instance_id is a unique identifier for the user application that's stable.
	// see https://firebase.google.com/docs/reference/android/com/google/firebase/iid/FirebaseInstanceId#getId()
	// @inject_tag: firestore:"instanceID,omitempty"
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty" firestore:"instanceID,omitempty"`
	// token is an ephemeral token that is being rotated by Firebase. This field may
	// differ in time for the same instance_id.
	// see https://firebase.google.com/docs/cloud-messaging/android/client#sample-register
	// @inject_tag: firestore:"token,omitempty"
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty" firestore:"token,omitempty"`
	// ref is a consumer-defined id used querying the tokens and sending notifications
	// to a specific user or a group of users.
	// Usage:
	//  - use this field to store the unique user ID
	//  - for anonymous users, generate their unique ID from Firebase
	// @inject_tag: firestore:"ref,omitempty"
	Ref string `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty" firestore:"ref,omitempty"`
	// labels is a map used for querying using the equality operator. Use this field
	// to group users or add metadata when needed.
	// @inject_tag: firestore:"labels,omitempty"
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" firestore:"labels,omitempty"`
}

func (x *AppInstance) Reset() {
	*x = AppInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInstance) ProtoMessage() {}

func (x *AppInstance) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInstance.ProtoReflect.Descriptor instead.
func (*AppInstance) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *AppInstance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AppInstance) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AppInstance) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *AppInstance) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RemoveTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// instance_id is the unique identifier used to identify devices
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *RemoveTokenRequest) Reset() {
	*x = RemoveTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTokenRequest) ProtoMessage() {}

func (x *RemoveTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTokenRequest.ProtoReflect.Descriptor instead.
func (*RemoveTokenRequest) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *RemoveTokenRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type RemoveInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// instance_id is the unique identifier used to identify devices
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *RemoveInstanceRequest) Reset() {
	*x = RemoveInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstanceRequest) ProtoMessage() {}

func (x *RemoveInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstanceRequest.ProtoReflect.Descriptor instead.
func (*RemoveInstanceRequest) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *SendRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type SendAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SendAllRequest) Reset() {
	*x = SendAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAllRequest) ProtoMessage() {}

func (x *SendAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAllRequest.ProtoReflect.Descriptor instead.
func (*SendAllRequest) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *SendAllRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SendMulticastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *MulticastMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMulticastRequest) Reset() {
	*x = SendMulticastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMulticastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMulticastRequest) ProtoMessage() {}

func (x *SendMulticastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMulticastRequest.ProtoReflect.Descriptor instead.
func (*SendMulticastRequest) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *SendMulticastRequest) GetMessage() *MulticastMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// templateData is used to replace dynamic values inside the
	// FCM message configuration
	TemplateData map[string]string `protobuf:"bytes,2,rep,name=templateData,proto3" json:"templateData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// data is the list to be sent along the notification
	Data map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// the message must specify exactly one of token, topic, or condition
	// see https://pkg.go.dev/firebase.google.com/go/messaging#Client.Send
	Token     string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Topic     string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Condition string `protobuf:"bytes,6,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *Message) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *Message) GetTemplateData() map[string]string {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

func (x *Message) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Message) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Message) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type MulticastMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// templateData is used to replace dynamic values inside the
	// FCM message configuration
	TemplateData map[string]string `protobuf:"bytes,2,rep,name=templateData,proto3" json:"templateData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// data is the list to be sent along the notification
	Data map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// tokens is a list of tokens the message should be sent to
	Tokens []string `protobuf:"bytes,4,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *MulticastMessage) Reset() {
	*x = MulticastMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MulticastMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulticastMessage) ProtoMessage() {}

func (x *MulticastMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulticastMessage.ProtoReflect.Descriptor instead.
func (*MulticastMessage) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *MulticastMessage) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *MulticastMessage) GetTemplateData() map[string]string {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

func (x *MulticastMessage) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MulticastMessage) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// ListNotificationsRequest defines a message that returns notifications
// already sent in a descending list
type ListNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the filter accepts parameters using the following rule:
	// 1) if 'instance_id' is set, use this parameter
	// 2) if 'token' is set, use this parameter
	// 3) if 'ref' is set, use this parameter
	// -- parameters 1-3 are always uniquely identifying the objects
	// 4) use labels map with the AND semantic
	Filter    *AppInstance `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageSize  int32        `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string       `protobuf:"bytes,11,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *ListNotificationsRequest) GetFilter() *AppInstance {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListNotificationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListNotificationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type NotificationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *NotificationList) Reset() {
	*x = NotificationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationList) ProtoMessage() {}

func (x *NotificationList) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationList.ProtoReflect.Descriptor instead.
func (*NotificationList) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *NotificationList) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *NotificationList) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Notification is message generated by the system for a specific user
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *AppInstance      `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Data     map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// message is the object containing the configuration of an FCM message
	// see https://pkg.go.dev/firebase.google.com/go/messaging#Message
	// this object is already populated from the template and corresponds to
	// what was sent to the FCM API
	Message *FCMMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{10}
}

func (x *Notification) GetInstance() *AppInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *Notification) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Notification) GetMessage() *FCMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// NotificationConfig is the object of a configuration file parsed from the
// remote config. It contains all message templates
type NotificationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: firestore:"messages,omitempty"
	Messages []*MessageTemplate `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty" firestore:"messages,omitempty"`
}

func (x *NotificationConfig) Reset() {
	*x = NotificationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationConfig) ProtoMessage() {}

func (x *NotificationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationConfig.ProtoReflect.Descriptor instead.
func (*NotificationConfig) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{11}
}

func (x *NotificationConfig) GetMessages() []*MessageTemplate {
	if x != nil {
		return x.Messages
	}
	return nil
}

type MessageTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is a unique key under which the template is referenced
	// this field is other referenced as 'instance_id'
	// @inject_tag: firestore:"id,omitempty"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id,omitempty"`
	// message is the object containing the configuration of an FCM message
	// see https://pkg.go.dev/firebase.google.com/go/messaging#Message
	// this object will be parsed from the configuration file directly into the
	// FCM message specification
	// @inject_tag: firestore:"message,omitempty"
	Message map[string]*any.Any `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" firestore:"message,omitempty"`
}

func (x *MessageTemplate) Reset() {
	*x = MessageTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTemplate) ProtoMessage() {}

func (x *MessageTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTemplate.ProtoReflect.Descriptor instead.
func (*MessageTemplate) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{12}
}

func (x *MessageTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageTemplate) GetMessage() map[string]*any.Any {
	if x != nil {
		return x.Message
	}
	return nil
}

type FCMMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: firestore:"data,omitempty"
	Data map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" firestore:"data,omitempty"`
	// @inject_tag: firestore:"notification,omitempty"
	Notification *FCMNotification `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty" firestore:"notification,omitempty"`
	// @inject_tag: firestore:"android,omitempty"
	Android *FCMAndroid `protobuf:"bytes,3,opt,name=android,proto3" json:"android,omitempty" firestore:"android,omitempty"`
	// @inject_tag: firestore:"webpush,omitempty"
	Webpush *FCMWebpush `protobuf:"bytes,4,opt,name=webpush,proto3" json:"webpush,omitempty" firestore:"webpush,omitempty"`
	// @inject_tag: firestore:"apns,omitempty"
	Apns *FCMAPNS `protobuf:"bytes,5,opt,name=apns,proto3" json:"apns,omitempty" firestore:"apns,omitempty"`
	// @inject_tag: firestore:"fcmOptions,omitempty"
	FcmOptions *FCMOptions `protobuf:"bytes,6,opt,name=fcm_options,json=fcmOptions,proto3" json:"fcm_options,omitempty" firestore:"fcmOptions,omitempty"`
	// @inject_tag: firestore:"token,omitempty"
	Token string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty" firestore:"token,omitempty"`
	// @inject_tag: firestore:"topic,omitempty"
	Topic string `protobuf:"bytes,8,opt,name=topic,proto3" json:"topic,omitempty" firestore:"topic,omitempty"`
	// @inject_tag: firestore:"condition,omitempty"
	Condition string `protobuf:"bytes,9,opt,name=condition,proto3" json:"condition,omitempty" firestore:"condition,omitempty"`
}

func (x *FCMMessage) Reset() {
	*x = FCMMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMMessage) ProtoMessage() {}

func (x *FCMMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMMessage.ProtoReflect.Descriptor instead.
func (*FCMMessage) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{13}
}

func (x *FCMMessage) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FCMMessage) GetNotification() *FCMNotification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *FCMMessage) GetAndroid() *FCMAndroid {
	if x != nil {
		return x.Android
	}
	return nil
}

func (x *FCMMessage) GetWebpush() *FCMWebpush {
	if x != nil {
		return x.Webpush
	}
	return nil
}

func (x *FCMMessage) GetApns() *FCMAPNS {
	if x != nil {
		return x.Apns
	}
	return nil
}

func (x *FCMMessage) GetFcmOptions() *FCMOptions {
	if x != nil {
		return x.FcmOptions
	}
	return nil
}

func (x *FCMMessage) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FCMMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *FCMMessage) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type FCMNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: firestore:"title,omitempty"
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" firestore:"title,omitempty"`
	// @inject_tag: firestore:"body,omitempty"
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty" firestore:"body,omitempty"`
	// @inject_tag: firestore:"imageURL,omitempty"
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty" firestore:"imageURL,omitempty"`
}

func (x *FCMNotification) Reset() {
	*x = FCMNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMNotification) ProtoMessage() {}

func (x *FCMNotification) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMNotification.ProtoReflect.Descriptor instead.
func (*FCMNotification) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{14}
}

func (x *FCMNotification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FCMNotification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *FCMNotification) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// see https://pkg.go.dev/firebase.google.com/go/messaging#AndroidConfig
type FCMAndroid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollapseKey           string                  `protobuf:"bytes,1,opt,name=collapse_key,json=collapseKey,proto3" json:"collapse_key,omitempty"`
	Priority              string                  `protobuf:"bytes,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Ttl                   *timestamp.Timestamp    `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	RestrictedPackageName string                  `protobuf:"bytes,4,opt,name=restricted_package_name,json=restrictedPackageName,proto3" json:"restricted_package_name,omitempty"`
	Data                  map[string]string       `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Notification          *FCMAndroidNotification `protobuf:"bytes,6,opt,name=notification,proto3" json:"notification,omitempty"`
	FcmOptions            *FCMAndroidOptions      `protobuf:"bytes,7,opt,name=fcm_options,json=fcmOptions,proto3" json:"fcm_options,omitempty"`
}

func (x *FCMAndroid) Reset() {
	*x = FCMAndroid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMAndroid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMAndroid) ProtoMessage() {}

func (x *FCMAndroid) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMAndroid.ProtoReflect.Descriptor instead.
func (*FCMAndroid) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{15}
}

func (x *FCMAndroid) GetCollapseKey() string {
	if x != nil {
		return x.CollapseKey
	}
	return ""
}

func (x *FCMAndroid) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *FCMAndroid) GetTtl() *timestamp.Timestamp {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *FCMAndroid) GetRestrictedPackageName() string {
	if x != nil {
		return x.RestrictedPackageName
	}
	return ""
}

func (x *FCMAndroid) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FCMAndroid) GetNotification() *FCMAndroidNotification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *FCMAndroid) GetFcmOptions() *FCMAndroidOptions {
	if x != nil {
		return x.FcmOptions
	}
	return nil
}

// see https://pkg.go.dev/firebase.google.com/go/messaging#AndroidNotification
type FCMAndroidNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: firestore"title,omitempty"
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// @inject_tag: firestore"body,omitempty"
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	// @inject_tag: firestore"icon,omitempty"
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// @inject_tag: firestore"color,omitempty"
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// @inject_tag: firestore"sound,omitempty"
	Sound string `protobuf:"bytes,5,opt,name=sound,proto3" json:"sound,omitempty"`
	// @inject_tag: firestore"tag,omitempty"
	Tag string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	// @inject_tag: firestore"click_action,omitempty"
	ClickAction string `protobuf:"bytes,7,opt,name=click_action,json=clickAction,proto3" json:"click_action,omitempty"`
	// @inject_tag: firestore"body_loc_key,omitempty"
	BodyLocKey string `protobuf:"bytes,8,opt,name=body_loc_key,json=bodyLocKey,proto3" json:"body_loc_key,omitempty"`
	// @inject_tag: firestore"body_loc_args,omitempty"
	BodyLocArgs []string `protobuf:"bytes,9,rep,name=body_loc_args,json=bodyLocArgs,proto3" json:"body_loc_args,omitempty"`
	// @inject_tag: firestore"title_loc_key,omitempty"
	TitleLocKey string `protobuf:"bytes,10,opt,name=title_loc_key,json=titleLocKey,proto3" json:"title_loc_key,omitempty"`
	// @inject_tag: firestore"title_loc_args,omitempty"
	TitleLocArgs []string `protobuf:"bytes,11,rep,name=title_loc_args,json=titleLocArgs,proto3" json:"title_loc_args,omitempty"`
	// @inject_tag: firestore"channel_id,omitempty"
	ChannelId string `protobuf:"bytes,12,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// @inject_tag: firestore:"image,omitempty" json:"image,omitempty"
	ImageUrl string `protobuf:"bytes,13,opt,name=image_url,json=imageUrl,proto3" json:"image,omitempty" firestore:"image,omitempty"`
}

func (x *FCMAndroidNotification) Reset() {
	*x = FCMAndroidNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMAndroidNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMAndroidNotification) ProtoMessage() {}

func (x *FCMAndroidNotification) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMAndroidNotification.ProtoReflect.Descriptor instead.
func (*FCMAndroidNotification) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{16}
}

func (x *FCMAndroidNotification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FCMAndroidNotification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *FCMAndroidNotification) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *FCMAndroidNotification) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *FCMAndroidNotification) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *FCMAndroidNotification) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *FCMAndroidNotification) GetClickAction() string {
	if x != nil {
		return x.ClickAction
	}
	return ""
}

func (x *FCMAndroidNotification) GetBodyLocKey() string {
	if x != nil {
		return x.BodyLocKey
	}
	return ""
}

func (x *FCMAndroidNotification) GetBodyLocArgs() []string {
	if x != nil {
		return x.BodyLocArgs
	}
	return nil
}

func (x *FCMAndroidNotification) GetTitleLocKey() string {
	if x != nil {
		return x.TitleLocKey
	}
	return ""
}

func (x *FCMAndroidNotification) GetTitleLocArgs() []string {
	if x != nil {
		return x.TitleLocArgs
	}
	return nil
}

func (x *FCMAndroidNotification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *FCMAndroidNotification) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// see https://pkg.go.dev/firebase.google.com/go/messaging#AndroidFCMOptions
type FCMAndroidOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: firestore:"analyticsLabel,omitempty"
	AnalyticsLabel string `protobuf:"bytes,1,opt,name=analytics_label,json=analyticsLabel,proto3" json:"analytics_label,omitempty" firestore:"analyticsLabel,omitempty"`
}

func (x *FCMAndroidOptions) Reset() {
	*x = FCMAndroidOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMAndroidOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMAndroidOptions) ProtoMessage() {}

func (x *FCMAndroidOptions) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMAndroidOptions.ProtoReflect.Descriptor instead.
func (*FCMAndroidOptions) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{17}
}

func (x *FCMAndroidOptions) GetAnalyticsLabel() string {
	if x != nil {
		return x.AnalyticsLabel
	}
	return ""
}

type FCMWebpush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FCMWebpush) Reset() {
	*x = FCMWebpush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMWebpush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMWebpush) ProtoMessage() {}

func (x *FCMWebpush) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMWebpush.ProtoReflect.Descriptor instead.
func (*FCMWebpush) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{18}
}

type FCMAPNS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FCMAPNS) Reset() {
	*x = FCMAPNS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMAPNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMAPNS) ProtoMessage() {}

func (x *FCMAPNS) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMAPNS.ProtoReflect.Descriptor instead.
func (*FCMAPNS) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{19}
}

type FCMOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FCMOptions) Reset() {
	*x = FCMOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notification_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FCMOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FCMOptions) ProtoMessage() {}

func (x *FCMOptions) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notification_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FCMOptions.ProtoReflect.Descriptor instead.
func (*FCMOptions) Descriptor() ([]byte, []int) {
	return file_v1_notification_proto_rawDescGZIP(), []int{20}
}

var File_v1_notification_proto protoreflect.FileDescriptor

var file_v1_notification_proto_rawDesc = []byte{
	0x0a, 0x15, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x0e, 0x53, 0x65, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x53, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x63, 0x6d,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf6, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66, 0x63, 0x6d, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xdf, 0x02, 0x0a, 0x10, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x66, 0x63,
	0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66,
	0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x8c, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x7f, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x63,
	0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xf5, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x63, 0x6d,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x63, 0x6d,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x43, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x12, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xbc, 0x01,
	0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x47, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x50, 0x0a, 0x0c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xea, 0x03, 0x0a,
	0x0a, 0x46, 0x43, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x63, 0x6d, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x43, 0x4d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66,
	0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x43, 0x4d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x43, 0x4d, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x52, 0x07, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x70, 0x75, 0x73, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x43, 0x4d, 0x57, 0x65, 0x62, 0x70, 0x75, 0x73,
	0x68, 0x52, 0x07, 0x77, 0x65, 0x62, 0x70, 0x75, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x70,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x43, 0x4d, 0x41, 0x50,
	0x4e, 0x53, 0x52, 0x04, 0x61, 0x70, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x66, 0x63, 0x6d, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x43, 0x4d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x66, 0x63, 0x6d, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x0f, 0x46, 0x43, 0x4d,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0xb7, 0x03, 0x0a, 0x0a, 0x46, 0x43, 0x4d, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12,
	0x36, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x43, 0x4d, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x43, 0x4d, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x43, 0x0a, 0x0b, 0x66, 0x63, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x43, 0x4d, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x66, 0x63, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x83, 0x03,
	0x0a, 0x16, 0x46, 0x43, 0x4d, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x6f, 0x64, 0x79, 0x5f,
	0x6c, 0x6f, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x6f, 0x64, 0x79, 0x4c, 0x6f, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x6f, 0x64, 0x79, 0x4c, 0x6f, 0x63, 0x41, 0x72, 0x67, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x4c, 0x6f, 0x63, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x3c, 0x0a, 0x11, 0x46, 0x43, 0x4d, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x22, 0x0c, 0x0a, 0x0a, 0x46, 0x43, 0x4d, 0x57, 0x65, 0x62, 0x70, 0x75, 0x73, 0x68, 0x22,
	0x09, 0x0a, 0x07, 0x46, 0x43, 0x4d, 0x41, 0x50, 0x4e, 0x53, 0x22, 0x0c, 0x0a, 0x0a, 0x46, 0x43,
	0x4d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xf7, 0x04, 0x0a, 0x13, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1c, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x04, 0x53, 0x65, 0x6e,
	0x64, 0x12, 0x1c, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22,
	0x05, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x57, 0x0a, 0x07, 0x53, 0x65, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x3a,
	0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x73, 0x65, 0x6e,
	0x64, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x29, 0x2e, 0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x66, 0x63, 0x6d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x65, 0x74, 0x6f, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x61, 0x2f, 0x66, 0x63, 0x6d, 0x2d,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67,
	0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_notification_proto_rawDescOnce sync.Once
	file_v1_notification_proto_rawDescData = file_v1_notification_proto_rawDesc
)

func file_v1_notification_proto_rawDescGZIP() []byte {
	file_v1_notification_proto_rawDescOnce.Do(func() {
		file_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_notification_proto_rawDescData)
	})
	return file_v1_notification_proto_rawDescData
}

var file_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_v1_notification_proto_goTypes = []interface{}{
	(*AppInstance)(nil),              // 0: fcmcompanion.v1.AppInstance
	(*RemoveTokenRequest)(nil),       // 1: fcmcompanion.v1.RemoveTokenRequest
	(*RemoveInstanceRequest)(nil),    // 2: fcmcompanion.v1.RemoveInstanceRequest
	(*SendRequest)(nil),              // 3: fcmcompanion.v1.SendRequest
	(*SendAllRequest)(nil),           // 4: fcmcompanion.v1.SendAllRequest
	(*SendMulticastRequest)(nil),     // 5: fcmcompanion.v1.SendMulticastRequest
	(*Message)(nil),                  // 6: fcmcompanion.v1.Message
	(*MulticastMessage)(nil),         // 7: fcmcompanion.v1.MulticastMessage
	(*ListNotificationsRequest)(nil), // 8: fcmcompanion.v1.ListNotificationsRequest
	(*NotificationList)(nil),         // 9: fcmcompanion.v1.NotificationList
	(*Notification)(nil),             // 10: fcmcompanion.v1.Notification
	(*NotificationConfig)(nil),       // 11: fcmcompanion.v1.NotificationConfig
	(*MessageTemplate)(nil),          // 12: fcmcompanion.v1.MessageTemplate
	(*FCMMessage)(nil),               // 13: fcmcompanion.v1.FCMMessage
	(*FCMNotification)(nil),          // 14: fcmcompanion.v1.FCMNotification
	(*FCMAndroid)(nil),               // 15: fcmcompanion.v1.FCMAndroid
	(*FCMAndroidNotification)(nil),   // 16: fcmcompanion.v1.FCMAndroidNotification
	(*FCMAndroidOptions)(nil),        // 17: fcmcompanion.v1.FCMAndroidOptions
	(*FCMWebpush)(nil),               // 18: fcmcompanion.v1.FCMWebpush
	(*FCMAPNS)(nil),                  // 19: fcmcompanion.v1.FCMAPNS
	(*FCMOptions)(nil),               // 20: fcmcompanion.v1.FCMOptions
	nil,                              // 21: fcmcompanion.v1.AppInstance.LabelsEntry
	nil,                              // 22: fcmcompanion.v1.Message.TemplateDataEntry
	nil,                              // 23: fcmcompanion.v1.Message.DataEntry
	nil,                              // 24: fcmcompanion.v1.MulticastMessage.TemplateDataEntry
	nil,                              // 25: fcmcompanion.v1.MulticastMessage.DataEntry
	nil,                              // 26: fcmcompanion.v1.Notification.DataEntry
	nil,                              // 27: fcmcompanion.v1.MessageTemplate.MessageEntry
	nil,                              // 28: fcmcompanion.v1.FCMMessage.DataEntry
	nil,                              // 29: fcmcompanion.v1.FCMAndroid.DataEntry
	(*timestamp.Timestamp)(nil),      // 30: google.protobuf.Timestamp
	(*any.Any)(nil),                  // 31: google.protobuf.Any
	(*empty.Empty)(nil),              // 32: google.protobuf.Empty
}
var file_v1_notification_proto_depIdxs = []int32{
	21, // 0: fcmcompanion.v1.AppInstance.labels:type_name -> fcmcompanion.v1.AppInstance.LabelsEntry
	6,  // 1: fcmcompanion.v1.SendRequest.message:type_name -> fcmcompanion.v1.Message
	6,  // 2: fcmcompanion.v1.SendAllRequest.messages:type_name -> fcmcompanion.v1.Message
	7,  // 3: fcmcompanion.v1.SendMulticastRequest.message:type_name -> fcmcompanion.v1.MulticastMessage
	22, // 4: fcmcompanion.v1.Message.templateData:type_name -> fcmcompanion.v1.Message.TemplateDataEntry
	23, // 5: fcmcompanion.v1.Message.data:type_name -> fcmcompanion.v1.Message.DataEntry
	24, // 6: fcmcompanion.v1.MulticastMessage.templateData:type_name -> fcmcompanion.v1.MulticastMessage.TemplateDataEntry
	25, // 7: fcmcompanion.v1.MulticastMessage.data:type_name -> fcmcompanion.v1.MulticastMessage.DataEntry
	0,  // 8: fcmcompanion.v1.ListNotificationsRequest.filter:type_name -> fcmcompanion.v1.AppInstance
	10, // 9: fcmcompanion.v1.NotificationList.notifications:type_name -> fcmcompanion.v1.Notification
	0,  // 10: fcmcompanion.v1.Notification.instance:type_name -> fcmcompanion.v1.AppInstance
	26, // 11: fcmcompanion.v1.Notification.data:type_name -> fcmcompanion.v1.Notification.DataEntry
	13, // 12: fcmcompanion.v1.Notification.message:type_name -> fcmcompanion.v1.FCMMessage
	12, // 13: fcmcompanion.v1.NotificationConfig.messages:type_name -> fcmcompanion.v1.MessageTemplate
	27, // 14: fcmcompanion.v1.MessageTemplate.message:type_name -> fcmcompanion.v1.MessageTemplate.MessageEntry
	28, // 15: fcmcompanion.v1.FCMMessage.data:type_name -> fcmcompanion.v1.FCMMessage.DataEntry
	14, // 16: fcmcompanion.v1.FCMMessage.notification:type_name -> fcmcompanion.v1.FCMNotification
	15, // 17: fcmcompanion.v1.FCMMessage.android:type_name -> fcmcompanion.v1.FCMAndroid
	18, // 18: fcmcompanion.v1.FCMMessage.webpush:type_name -> fcmcompanion.v1.FCMWebpush
	19, // 19: fcmcompanion.v1.FCMMessage.apns:type_name -> fcmcompanion.v1.FCMAPNS
	20, // 20: fcmcompanion.v1.FCMMessage.fcm_options:type_name -> fcmcompanion.v1.FCMOptions
	30, // 21: fcmcompanion.v1.FCMAndroid.ttl:type_name -> google.protobuf.Timestamp
	29, // 22: fcmcompanion.v1.FCMAndroid.data:type_name -> fcmcompanion.v1.FCMAndroid.DataEntry
	16, // 23: fcmcompanion.v1.FCMAndroid.notification:type_name -> fcmcompanion.v1.FCMAndroidNotification
	17, // 24: fcmcompanion.v1.FCMAndroid.fcm_options:type_name -> fcmcompanion.v1.FCMAndroidOptions
	31, // 25: fcmcompanion.v1.MessageTemplate.MessageEntry.value:type_name -> google.protobuf.Any
	0,  // 26: fcmcompanion.v1.NotificationService.PutInstance:input_type -> fcmcompanion.v1.AppInstance
	1,  // 27: fcmcompanion.v1.NotificationService.RemoveToken:input_type -> fcmcompanion.v1.RemoveTokenRequest
	2,  // 28: fcmcompanion.v1.NotificationService.RemoveInstance:input_type -> fcmcompanion.v1.RemoveInstanceRequest
	3,  // 29: fcmcompanion.v1.NotificationService.Send:input_type -> fcmcompanion.v1.SendRequest
	4,  // 30: fcmcompanion.v1.NotificationService.SendAll:input_type -> fcmcompanion.v1.SendAllRequest
	5,  // 31: fcmcompanion.v1.NotificationService.SendMulticast:input_type -> fcmcompanion.v1.SendMulticastRequest
	8,  // 32: fcmcompanion.v1.NotificationService.ListNotifications:input_type -> fcmcompanion.v1.ListNotificationsRequest
	32, // 33: fcmcompanion.v1.NotificationService.PutInstance:output_type -> google.protobuf.Empty
	32, // 34: fcmcompanion.v1.NotificationService.RemoveToken:output_type -> google.protobuf.Empty
	32, // 35: fcmcompanion.v1.NotificationService.RemoveInstance:output_type -> google.protobuf.Empty
	32, // 36: fcmcompanion.v1.NotificationService.Send:output_type -> google.protobuf.Empty
	32, // 37: fcmcompanion.v1.NotificationService.SendAll:output_type -> google.protobuf.Empty
	32, // 38: fcmcompanion.v1.NotificationService.SendMulticast:output_type -> google.protobuf.Empty
	9,  // 39: fcmcompanion.v1.NotificationService.ListNotifications:output_type -> fcmcompanion.v1.NotificationList
	33, // [33:40] is the sub-list for method output_type
	26, // [26:33] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_v1_notification_proto_init() }
func file_v1_notification_proto_init() {
	if File_v1_notification_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMulticastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MulticastMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMAndroid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMAndroidNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMAndroidOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMWebpush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMAPNS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notification_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FCMOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_notification_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_notification_proto_goTypes,
		DependencyIndexes: file_v1_notification_proto_depIdxs,
		MessageInfos:      file_v1_notification_proto_msgTypes,
	}.Build()
	File_v1_notification_proto = out.File
	file_v1_notification_proto_rawDesc = nil
	file_v1_notification_proto_goTypes = nil
	file_v1_notification_proto_depIdxs = nil
}
